name: 'ðŸ”¨ Infrastructure Configuring using Terraform on AWS(Terraform Cloud Demo)' 

on: 
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Terraform Action'
        options:
          - plan
          - apply
          - destroy
        required: true
        default: 'plan'

env:
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
  TF_WORKSPACE: ${{ secrets.TF_WORKSPACE }}
  TF_CLOUD_ORGANIZATION: ${{ secrets.TF_CLOUD_ORGANIZATION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
permissions:
  contents: read


jobs:
  infrastructure-setup-using-terraform:
    name: Terraform ${{ github.event.inputs.action }}
    runs-on: ubuntu-24.04

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setting Up the Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.13.3"
          terraform_wrapper: true
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Cache Terraform
        uses: actions/cache@v4
        with:
          path: |
            ~/.terraform.d/plugin-cache
            .terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-
          
      - name: Initialising the Terraform
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check --diff
        continue-on-error: false

      - name: Terraform Validate
        run: terraform validate
        continue-on-error: false

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: |
          terraform plan -input=false -out=tfplan
          terraform show -no-color tfplan
        continue-on-error: false

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve
        continue-on-error: false

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
        continue-on-error: false